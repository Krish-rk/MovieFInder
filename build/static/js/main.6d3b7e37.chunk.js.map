{"version":3,"sources":["components/SearchBar.js","components/Navbar.js","components/MovieCard.js","components/Pagination.js","App.js","index.js"],"names":["SearchBar","_ref","onSearch","query","setQuery","useState","React","createElement","className","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","Navbar","MovieCard","_movie$author_name","movie","dogImage","setDogImage","useEffect","async","response","fetch","data","json","message","fetchDogImage","src","alt","title","author_name","join","first_publish_year","Pagination","currentPage","totalPages","onPageChange","pages","i","push","key","onClick","disabled","App","movies","setMovies","setCurrentPage","loading","setLoading","indexOfLastMovie","indexOfFirstMovie","currentMovies","slice","Math","ceil","length","concat","docs","error","console","TailSpin","color","height","width","Fragment","map","page","ReactDOM","render","TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.6d3b7e37.chunk.js","sourcesContent":["// src/components/SearchBar.js\nimport React, { useState } from \"react\";\nimport \"./SearchBar.css\";\n\nconst SearchBar = ({ onSearch }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    onSearch(query);\n  };\n\n  return (\n    <form className=\"search-bar\" onSubmit={handleSearch}>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for a movie...\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","// src/components/Navbar.js\nimport React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport \"./Navbar.css\";\n\nconst Navbar = ({ onSearch }) => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar-brand\">Movie Finder</div>\n      <SearchBar onSearch={onSearch} />\n    </div>\n  );\n};\n\nexport default Navbar;\n","// src/components/MovieCard.js\nimport React, { useEffect, useState } from \"react\";\n\nconst MovieCard = ({ movie }) => {\n  const [dogImage, setDogImage] = useState(\"\");\n\n  useEffect(() => {\n    const fetchDogImage = async () => {\n      const response = await fetch(\"https://dog.ceo/api/breeds/image/random\");\n      const data = await response.json();\n      setDogImage(data.message);\n    };\n\n    fetchDogImage();\n  }, []);\n\n  return (\n    <div className=\"movie-card\">\n      <img src={dogImage} alt=\"Random Dog\" />\n      <h3>{movie.title}</h3>\n      <p>{movie.author_name?.join(\", \")}</p>\n      <p>{movie.first_publish_year}</p>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","// src/components/Pagination.js\nimport React from \"react\";\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const pages = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    pages.push(\n      <button\n        key={i}\n        className={i === currentPage ? \"active\" : \"\"}\n        onClick={() => onPageChange(i)}\n      >\n        {i}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"pagination\">\n      <button\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      ></button>\n      {pages}\n      <button\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      ></button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","// src/App.js\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport MovieCard from \"./components/MovieCard\";\nimport Pagination from \"./components/Pagination\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const moviesPerPage = 60;\n\n  const fetchMovies = async (query) => {\n    setLoading(true);\n    try {\n      const response = await fetch(\n        `https://openlibrary.org/search.json?q=${query}`\n      );\n      const data = await response.json();\n      setMovies(data.docs);\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n    } finally {\n      setLoading(false);\n    }\n    setCurrentPage(1); // Reset to first page on new search\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\n  const totalPages = Math.ceil(movies.length / moviesPerPage);\n\n  return (\n    <div className=\"container\">\n      <Navbar onSearch={fetchMovies} />\n      {loading ? (\n        <div className=\"loader\">\n          <TailSpin color=\"#007bff\" height={80} width={80} />\n        </div>\n      ) : (\n        <>\n          <div className=\"movie-cards\">\n            {currentMovies.map((movie) => (\n              <MovieCard key={movie.key} movie={movie} />\n            ))}\n          </div>\n          {totalPages > 1 && (\n            <Pagination\n              currentPage={currentPage}\n              totalPages={totalPages}\n              onPageChange={handlePageChange}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoApp from './App';\nimport './index.css';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}